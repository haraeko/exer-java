package com.hara.crm.workbench.mapper;

import com.hara.crm.workbench.domain.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Thu Oct 22 08:57:21 CST 2020
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Thu Oct 22 08:57:21 CST 2020
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Thu Oct 22 08:57:21 CST 2020
     */
//    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Thu Oct 22 08:57:21 CST 2020
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Thu Oct 22 08:57:21 CST 2020
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 保存创建的市场活动
     */
    int insertActivity(Activity activity);

    List<Activity> selectActivityByConditionForPage(Map<String,Object> map);

    int selectCountOfActivityByCondition(Map<String,Object> map);

    /**
     * 根据id批量删除数据
     */

    int deleteActivityByIds(String[] ids);

//根据id单个查询活动
    Activity selectActivityById(String id);

//    根据id单个修改活动
    int updateActivityById(Activity activity);

//   批量导出   批量查询
    List<Activity> selectAllActivityByCheck();

//    导入数据
    int insertActivityByList(List<Activity> activityList);

//    根据id查询市场活动的明细信息
    Activity selectActivityForDetailById(String id);

//    根据clueId查询线索关联的市场活动
    List<Activity> selectActivityForClueByClueId(String clueId);

//    模糊查询活动，和线索关联     参数为name
//      排除已经关联过的    参数为  clueid
    List<Activity> selectActivityForClueByNameClueId(Map<String,Object> map);
//根据id 批量查询线索对应的多条activity
    List<Activity> selectActivityForClueByIds(String[] ids);
//根据name模糊查询   和clueid关联过的市场活动
    List<Activity> selectActivityForConvertByNameClueId(Map<String,Object> map);

}